# ====================================
# DOCKER COMPOSE - DESARROLLO LOCAL
# ====================================
version: '3.8'

services:
  # Base de datos PostgreSQL
  db:
    image: postgres:15
    container_name: crowe_db
    environment:
      POSTGRES_DB: crowe7p
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - crowe_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Backend Django
  backend:
    build: 
      context: ./administrador
      dockerfile: Dockerfile
    container_name: crowe_backend
    ports:
      - "8000:8000"
    volumes:
      - ./administrador:/app
    environment:
      - DEBUG=True
      - DB_NAME=crowe7p
      - DB_USER=postgres
      - DB_PASSWORD=1234
      - DB_HOST=db
      - DB_PORT=5432
      - CORS_ALLOWED_ORIGINS=http://localhost:5173,http://127.0.0.1:5173
    depends_on:
      db:
        condition: service_healthy
    command: sh -c "
      python manage.py migrate &&
      python manage.py create_master_user &&
      python manage.py runserver 0.0.0.0:8000"
    networks:
      - crowe_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/admin/"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Frontend React/Remix
  frontend:
    build:
      context: ./frontend/crowe-trip
      dockerfile: Dockerfile
      target: development
    container_name: crowe_frontend
    ports:
      - "5173:5173"
    volumes:
      - ./frontend/crowe-trip:/app
      - /app/node_modules  # Evitar conflictos de node_modules
    environment:
      - VITE_API_BASE_URL=http://127.0.0.1:8000
      - VITE_ENVIRONMENT=development
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - crowe_network
    stdin_open: true
    tty: true

volumes:
  postgres_data:

networks:
  crowe_network:
    driver: bridge
