# middleware.py temporal para debug
import json
import logging

logger = logging.getLogger(__name__)

class DebugMiddleware:
    def __init__(self, get_response):
        self.get_response = get_response

    def __call__(self, request):
        if request.method == 'POST' and '/api/users/empresas/' in request.path:
            print(f"ðŸ”§ [MIDDLEWARE] Path: {request.path}")
            print(f"ðŸ”§ [MIDDLEWARE] Method: {request.method}")
            print(f"ðŸ”§ [MIDDLEWARE] Content-Type: {request.content_type}")
            print(f"ðŸ”§ [MIDDLEWARE] Headers: {dict(request.headers)}")
            print(f"ðŸ”§ [MIDDLEWARE] Body: {request.body}")
            
            # Verifica si el body puede ser parseado como JSON
            try:
                if request.body:
                    parsed = json.loads(request.body)
                    print(f"ðŸ”§ [MIDDLEWARE] Body parsed as JSON: {parsed}")
            except Exception as e:
                print(f"ðŸ”§ [MIDDLEWARE] Error parsing body: {e}")
        
        response = self.get_response(request)
        
        if request.method == 'POST' and '/api/users/empresas/' in request.path:
            print(f"ðŸ”§ [MIDDLEWARE] Response status: {response.status_code}")
        
        return response
