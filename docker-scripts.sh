#!/bin/bash

# ====================================
# SCRIPTS DE DESARROLLO Y PRODUCCI√ìN
# ====================================

echo "üöÄ Crowe Trip - Docker Management Scripts"
echo "========================================="

case "$1" in
  "dev")
    echo "üîß Iniciando entorno de desarrollo..."
    docker-compose down
    docker-compose up --build -d
    echo "‚úÖ Entorno de desarrollo iniciado:"
    echo "   Frontend: http://localhost:5173"
    echo "   Backend:  http://localhost:8000"
    echo "   Database: localhost:5432"
    ;;
  
  "prod")
    echo "üè≠ Iniciando entorno de producci√≥n..."
    docker-compose -f docker-compose.prod.yml down
    docker-compose -f docker-compose.prod.yml up --build -d
    echo "‚úÖ Entorno de producci√≥n iniciado:"
    echo "   Frontend: http://localhost"
    echo "   Backend:  (interno)"
    ;;
  
  "stop")
    echo "üõë Deteniendo todos los contenedores..."
    docker-compose down
    docker-compose -f docker-compose.prod.yml down
    echo "‚úÖ Contenedores detenidos"
    ;;
  
  "logs")
    echo "üìã Mostrando logs..."
    if [ "$2" == "prod" ]; then
      docker-compose -f docker-compose.prod.yml logs -f
    else
      docker-compose logs -f
    fi
    ;;
  
  "clean")
    echo "üßπ Limpiando contenedores y vol√∫menes..."
    docker-compose down -v
    docker-compose -f docker-compose.prod.yml down -v
    docker system prune -f
    echo "‚úÖ Limpieza completada"
    ;;
  
  "test")
    echo "üß™ Ejecutando tests..."
    docker-compose exec backend python manage.py test
    docker-compose exec frontend npm test
    ;;
  
  *)
    echo "Uso: $0 {dev|prod|stop|logs|clean|test}"
    echo ""
    echo "Comandos disponibles:"
    echo "  dev    - Iniciar entorno de desarrollo"
    echo "  prod   - Iniciar entorno de producci√≥n"
    echo "  stop   - Detener todos los contenedores"
    echo "  logs   - Ver logs (agregar 'prod' para producci√≥n)"
    echo "  clean  - Limpiar contenedores y vol√∫menes"
    echo "  test   - Ejecutar tests"
    exit 1
    ;;
esac
