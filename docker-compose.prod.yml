# ====================================
# DOCKER COMPOSE - PRODUCCIÃ“N
# ====================================
version: '3.8'

services:
  # Base de datos PostgreSQL
  db:
    image: postgres:15
    container_name: crowe_db_prod
    environment:
      POSTGRES_DB: crowe7p_prod
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-secure_password_here}
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
    networks:
      - crowe_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres}"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Backend Django
  backend:
    build: 
      context: ./administrador
      dockerfile: Dockerfile
    container_name: crowe_backend_prod
    environment:
      - DEBUG=False
      - DB_NAME=crowe7p_prod
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-secure_password_here}
      - DB_HOST=db
      - DB_PORT=5432
      - CORS_ALLOWED_ORIGINS=https://crowe.bronixia.es
      - ALLOWED_HOSTS=crowe.bronixia.es,backend
      - SECRET_KEY=${DJANGO_SECRET_KEY}
    depends_on:
      db:
        condition: service_healthy
    command: sh -c "
      python manage.py migrate &&
      python manage.py collectstatic --noinput &&
      python manage.py create_master_user &&
      gunicorn administrador.wsgi:application --bind 0.0.0.0:8000"
    networks:
      - crowe_network
    restart: unless-stopped

  # Frontend React/Remix
  frontend:
    build:
      context: ./frontend/crowe-trip
      dockerfile: Dockerfile
      target: production
      args:
        - VITE_API_BASE_URL=https://crowe.bronixia.es
    container_name: crowe_frontend_prod
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    networks:
      - crowe_network
    restart: unless-stopped

volumes:
  postgres_data_prod:

networks:
  crowe_network:
    driver: bridge
